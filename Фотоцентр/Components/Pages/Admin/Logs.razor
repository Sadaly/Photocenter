@page "/logs"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.EntityFrameworkCore
@using Фотоцентр.Data
@using Фотоцентр.Models
@rendermode RenderMode.InteractiveServer
@inject IDbContextFactory<AppDbContext> DbFactory
@attribute [Authorize(Roles = "admin")]

<PageTitle>Фотоцентр | Журнал</PageTitle>

<head runat="server">
    <link href="Assets\Css\Logs.css" rel="stylesheet" type="text/css" />
</head>

<div class="log-container">
    <div class="search-container">
        <input type="text" placeholder="ID лога" @bind="logIdFilter" @bind:event="oninput" />
        <input type="text" placeholder="ID пользователя" @bind="userIdFilter" @bind:event="oninput" />
        <input type="text" placeholder="Действие" @bind="actionTypeFilter" @bind:event="oninput" />
        <input type="text" placeholder="Время" @bind="actionTimestampFilter" @bind:event="oninput" />
        <input type="text" placeholder="Детали" @bind="detailsFilter" @bind:event="oninput" />
        <input type="text" placeholder="Таблица" @bind="tableNameFilter" @bind:event="oninput" />
        <input type="text" placeholder="Серьезность" @bind="severityLevelFilter" @bind:event="oninput" />
    </div>

    <Paginator State="pagination" />

    <QuickGrid Items="FilteredActionLogs" Pagination="pagination">
        <PropertyColumn Property="@(a => a.Log_Id)" Sortable="true" />
        <PropertyColumn Property="@(a => a.User_Id)" Sortable="true" />
        <PropertyColumn Property="@(a => a.Action_Type)" Sortable="true" />
        <PropertyColumn Property="@(a => a.Action_Timestamp)" Format="yyyy-MM-dd:hh-mm-ss" Sortable="true" />
        <PropertyColumn Property="@(a => a.Details)" Sortable="true" />
        <PropertyColumn Property="@(a => a.Table_Name)" Sortable="true" />
        <PropertyColumn Property="@(a => a.Severity_Level)" Sortable="true" />
    </QuickGrid>
</div>

@code {
    private AppDbContext context = default!;

    private string logIdFilter = "";
    private string userIdFilter = "";
    private string actionTypeFilter = "";
    private string actionTimestampFilter = "";
    private string detailsFilter = "";
    private string tableNameFilter = "";
    private string severityLevelFilter = "";

    PaginationState pagination = new PaginationState { ItemsPerPage = 20 };

    private IQueryable<ActionLog> FilteredActionLogs =>
        context.ActionLogs.Where(a => (a.Log_Id.ToString().Contains(logIdFilter) && !logIdFilter.Contains(" "))
        || (logIdFilter.Contains(" ") && a.Log_Id.ToString().Equals(logIdFilter))).
        Where(a => (a.User_Id.ToString().Contains(userIdFilter) && !userIdFilter.Contains(" "))
        || (userIdFilter.Contains(" ") && a.User_Id.ToString().Equals(userIdFilter))).
        Where(a => a.Action_Type!.Contains(actionTypeFilter)).
        Where(a => a.Action_Timestamp.ToString()!.Contains(actionTimestampFilter)).
        Where(a => a.Details!.Contains(detailsFilter)).
        Where(a => a.Table_Name!.Contains(tableNameFilter)).
        Where(a => a.Severity_Level.Contains(severityLevelFilter));

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }
}