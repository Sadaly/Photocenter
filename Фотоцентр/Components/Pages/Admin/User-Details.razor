@page "/user-details/{user_id:int}"
@rendermode RenderMode.InteractiveServer
@inject IDbContextFactory<AppDbContext> DbFactory
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "admin")]

<PageTitle>Фотоцентр | Информация о пользователе</PageTitle>

<head runat="server">
    <link href="Assets\Css\Profile.css" rel="stylesheet" type="text/css" />
</head>

@if (context.Clients.FirstOrDefault(c => c.User_Id == user_id) == null)
{
    navigationManager.NavigateTo("/users", true);    
}

<div class="content">

    <div class="profile-container">
        <h2 class="profile-header">Профиль пользователя</h2>

        <form id="profileForm">
            <label for="clientId">Номер клиента:</label>
            <input type="text" id="clientId" class="not-editable-input" value=@user_id readonly>

            <label for="clientName">Имя:</label>
            <input type="text" id="clientName" class="not-editable-input" value=@clientName readonly>

            <label for="email">Почта:</label>
            <input type="email" id="email" class="not-editable-input" value=@email readonly>

            <label for="phone">Телефон:</label>
            <input type="tel" id="phone" class="not-editable-input" value=@phone readonly>

            <label for="address">Адрес:</label>
            <input type="text" id="address" class="not-editable-input" value=@address readonly>

            <label for="regDate">Дата регистрации:</label>
            <input type="text" id="regDate" class="not-editable-input" value=@regDate readonly>
        </form>
    </div>

</div>

@code {
    [Parameter]
    public int user_id { get; set; }
    private AppDbContext context = default!;

    User? user;
    Client? client;

    private string? clientName;
    private string? email;
    private string? phone;
    private string? address;
    private string? regDate;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        user = context.Users.FirstOrDefault(u => u.User_Id == user_id);
        client = context.Clients.FirstOrDefault(c => c.User_Id == user_id);

        clientName = user?.Username;
        email = client?.Email;
        phone = client?.Phone;
        address = client?.Address;
        regDate = user?.Date_Registered.ToString();
    }
}